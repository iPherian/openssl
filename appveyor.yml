platform:
    - x64
    #- x86

environment:
    fast_finish: true
    matrix:
        #- VSVER: 14
        - VSVER: 15

configuration:
    - shared-debug
    - shared-release
    #- plain-debug
    #- plain-release
    #- minimal-debug
    #- minimal-release

image: Visual Studio 2017

clone_depth: 40

skip_tags: true

before_build:
    - ps: >-
        If ($env:Platform -Match "x86") {
            $env:VCVARS_PLATFORM="x86"
            $env:TARGET="VC-WIN32 no-asm --strict-warnings"
        } Else {
            $env:VCVARS_PLATFORM="amd64"
            $env:TARGET="VC-WIN64A-masm"
        }
    - ps: >-
        If ($env:Configuration -Match "shared") {
            $env:SHARED="no-makedepend"
        } ElseIf ($env:Configuration -Match "minimal") {
            $env:SHARED="no-shared no-dso no-makedepend no-autoload-config no-engine no-comp no-cms no-dh no-dsa no-ec2m no-srp no-des no-mdc2 no-md4 no-rc2 no-rc4 no-bf no-camellia no-cast no-idea no-seed no-whirlpool no-ocsp no-sm2 no-sm3 no-sm4 no-ssl3 no-ssl3-method no-psk no-heartbeats no-nextprotoneg no-sctp no-srtp no-asm -DOPENSSL_SMALL_FOOTPRINT"
        } Else {
            $env:SHARED="no-shared no-makedepend"
        }
    - ps: >-
        If ($env:Configuration -Match "debug") {
            $env:RELEASE_TYPE="--debug"
        } Else {
            $env:RELEASE_TYPE="--release"
        }
    - ps: >-
        If ($env:VSVER -Match "15") {
            $env:VSCOMNTOOLS=("C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools")
            $env:VCVARSBAT_LOC=($env:VSCOMNTOOLS+"\..\..\VC\Auxiliary\Build\vcvarsall.bat")
        } Else {
            $env:VSCOMNTOOLS=(Get-Content ("env:VS" + "$env:VSVER" + "0COMNTOOLS"))
            $env:VCVARSBAT_LOC=($env:VSCOMNTOOLS+"\..\..\VC\vcvarsall.bat")
        }
    - call "%VCVARSBAT_LOC%" %VCVARS_PLATFORM%
    - mkdir _build
    - cd _build
    - perl ..\Configure %TARGET% %SHARED% %RELEASE_TYPE% threads
    - perl configdata.pm --dump
    - cd ..
    - ps: >-
        if (-not $env:APPVEYOR_PULL_REQUEST_NUMBER`
            -or (&git log -2 | Select-String "\[extended tests\]") ) {
            $env:EXTENDED_TESTS="yes"
        }

build_script:
    - cd _build
    - ps: >-
        If ($env:Configuration -Match "shared" -or $env:EXTENDED_TESTS) {
            cmd /c "nmake build_all_generated 2>&1"
            cmd /c "nmake PERL=no-perl 2>&1"
        }
    - cd ..

after_build:
    - ps: $env:ARTIFACT_ZIP_BASE_NAME=($env:APPVEYOR_REPO_BRANCH+"-"+$env:Configuration+"-"+$env:Platform+"-vc"+$env:VSVER+"-build_"+$env:APPVEYOR_BUILD_VERSION)

test_script:
    - cd _build
    - ps: >-
        If ($env:Configuration -Match "shared" -or $env:EXTENDED_TESTS) {
            if ($env:EXTENDED_TESTS) {
                cmd /c "nmake test V=1 2>&1"
            } Else {
                cmd /c "nmake test V=1 TESTS=-test_fuzz 2>&1"
            }
        }
    - ps: >-
        if ($env:EXTENDED_TESTS) {
            mkdir ..\_install
            cmd /c "nmake install DESTDIR=..\_install 2>&1"
        }
    - cd ..

artifacts:
    #- path: '_build'
    #  name: '$(ARTIFACT_ZIP_BASE_NAME)-raw-_build'
    #- path: '_install'
    #  name: '$(ARTIFACT_ZIP_BASE_NAME)-raw-_install'
    - path: '_install\Program Files\OpenSSL'
      name: '$(ARTIFACT_ZIP_BASE_NAME)'
